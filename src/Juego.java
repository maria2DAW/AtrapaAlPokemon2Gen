import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_OPTION;

/**
 *
 * @author Maria
 */
public class Juego extends javax.swing.JFrame {

    static public AtrapaAlPokemon AAP;
    //static public String[] listaNombresPokemon;
    static public Pokemon pokemonAAtrapar;
    private String pokemonOculto;
    private String textoIntroducido;
    //static public List<Pokemon> listaPokemonDescubiertos;
    
    private ImageIcon imgNumPokeballs;
    
    private String nombreFichero;
    
    private List<Pokemon> listaPokemon;
    
    /**
     * Creates new form Juego
     * @throws java.net.MalformedURLException
     */
    public Juego() throws MalformedURLException, IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        
        //Cambiamos el icono del jframe
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src"+File.separator+"Images"+File.separator+"logo.png"));
        
        textFieldLetraIntroducida.requestFocus();
        
        nombreFichero = "pokemonDescubiertos.txt";
        
        ImageIcon imagen1 = new ImageIcon(new ImageIcon("src"+File.separator+"Images"+File.separator+"pokedex.png").getImage().getScaledInstance(47, 47, Image.SCALE_DEFAULT));
        bPokedex.setIcon(imagen1);      
        
        /*INSTANCIAR CLASE ATRAPAALPOKEMON*/
        AAP = new AtrapaAlPokemon();
        
        obtenerPartidaGuardada();
        
        /*Iniciar variables*/
        pokemonAAtrapar = AAP.getPokemonAAdivinar();
        
        labelNombreOculto.setText(AAP.getNomOculto());
        
        setTitle("ATRAPA AL POKÉMON");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelJuego = new javax.swing.JPanel();
        bPokedex = new javax.swing.JButton();
        jLabelAdivinaElNombre = new javax.swing.JLabel();
        labelNombreOculto = new javax.swing.JLabel();
        jLabelIntroduceLetra = new javax.swing.JLabel();
        textFieldLetraIntroducida = new javax.swing.JTextField();
        labelLetras = new javax.swing.JLabel();
        lblLetrasYaIntroducidas = new javax.swing.JLabel();
        bNuevoPokemon = new javax.swing.JButton();
        jLabelImgPokeballs = new javax.swing.JLabel();
        jButtonGuardar = new javax.swing.JButton();
        jLabelCaracteresEspeciales = new javax.swing.JLabel();
        jButtonGuion = new javax.swing.JButton();
        jButtonDos = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButtonSeCualEs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelJuego.setBackground(new java.awt.Color(100, 240, 100));
        jPanelJuego.setPreferredSize(new java.awt.Dimension(539, 459));
        jPanelJuego.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelJuegoMouseClicked(evt);
            }
        });
        jPanelJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanelJuegoKeyReleased(evt);
            }
        });

        bPokedex.setToolTipText("Ir a la Pokédex");
        bPokedex.setBorderPainted(false);
        bPokedex.setContentAreaFilled(false);
        bPokedex.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bPokedex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPokedexMouseClicked(evt);
            }
        });

        jLabelAdivinaElNombre.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        jLabelAdivinaElNombre.setText("Adivina el nombre del pokémon para atraparlo");

        labelNombreOculto.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        labelNombreOculto.setText("--------");

        jLabelIntroduceLetra.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabelIntroduceLetra.setText("Introduce una letra:");

        textFieldLetraIntroducida.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        textFieldLetraIntroducida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textFieldLetraIntroducida.setPreferredSize(new java.awt.Dimension(30, 30));
        textFieldLetraIntroducida.setSelectionColor(new java.awt.Color(204, 0, 0));
        textFieldLetraIntroducida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldLetraIntroducidaActionPerformed(evt);
            }
        });

        labelLetras.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        labelLetras.setText("Letras introducidas:");

        lblLetrasYaIntroducidas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bNuevoPokemon.setBackground(new java.awt.Color(255, 0, 0));
        bNuevoPokemon.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        bNuevoPokemon.setForeground(new java.awt.Color(255, 255, 255));
        bNuevoPokemon.setText("<html><u>A</u>trapa un nuevo pokémon</html>");
        bNuevoPokemon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bNuevoPokemon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bNuevoPokemonMouseClicked(evt);
            }
        });
        bNuevoPokemon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bNuevoPokemonKeyReleased(evt);
            }
        });

        jLabelImgPokeballs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/7.png"))); // NOI18N

        jButtonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonGuardar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonGuardar.setForeground(new java.awt.Color(255, 204, 0));
        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save.png"))); // NOI18N
        jButtonGuardar.setToolTipText("Guardar partida");
        jButtonGuardar.setBorder(null);
        jButtonGuardar.setBorderPainted(false);
        jButtonGuardar.setContentAreaFilled(false);
        jButtonGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGuardarMouseClicked(evt);
            }
        });

        jLabelCaracteresEspeciales.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabelCaracteresEspeciales.setText("Caracteres especiales o poco comunes:");
        jLabelCaracteresEspeciales.setToolTipText("Ciertos pokémon pueden incluirlos en sus nombres. No dudes en usarlos si sospechas que así sea.");

        jButtonGuion.setBackground(new java.awt.Color(255, 0, 0));
        jButtonGuion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonGuion.setText("-");
        jButtonGuion.setToolTipText("Símbolo macho");
        jButtonGuion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true));
        jButtonGuion.setBorderPainted(false);
        jButtonGuion.setPreferredSize(new java.awt.Dimension(40, 40));
        jButtonGuion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuionActionPerformed(evt);
            }
        });

        jButtonDos.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonDos.setText("2");
        jButtonDos.setToolTipText("Símbolo hembra");
        jButtonDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDosActionPerformed(evt);
            }
        });

        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/restart_icon.png"))); // NOI18N
        jButtonReset.setToolTipText("Resetear juego");
        jButtonReset.setBorder(null);
        jButtonReset.setBorderPainted(false);
        jButtonReset.setContentAreaFilled(false);
        jButtonReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonReset.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonSeCualEs.setBackground(new java.awt.Color(255, 0, 0));
        jButtonSeCualEs.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButtonSeCualEs.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSeCualEs.setText("<html>¡<u>S</u>É CUAL ES!</html>");
        jButtonSeCualEs.setToolTipText("Utiliza esta opción si ya sabes que pokémon es");
        jButtonSeCualEs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeCualEsActionPerformed(evt);
            }
        });
        jButtonSeCualEs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonSeCualEsKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelJuegoLayout = new javax.swing.GroupLayout(jPanelJuego);
        jPanelJuego.setLayout(jPanelJuegoLayout);
        jPanelJuegoLayout.setHorizontalGroup(
            jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(bNuevoPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLetrasYaIntroducidas, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                                .addComponent(jLabelIntroduceLetra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldLetraIntroducida, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButtonSeCualEs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bPokedex, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelLetras)
                                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                                        .addComponent(jButtonGuion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonDos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabelCaracteresEspeciales)
                                    .addComponent(labelNombreOculto, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelImgPokeballs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addComponent(jLabelAdivinaElNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        jPanelJuegoLayout.setVerticalGroup(
            jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabelAdivinaElNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldLetraIntroducida, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIntroduceLetra)
                    .addComponent(jButtonSeCualEs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCaracteresEspeciales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonGuion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(labelNombreOculto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(labelLetras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLetrasYaIntroducidas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bNuevoPokemon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelJuegoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bPokedex, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(21, Short.MAX_VALUE))))
                    .addGroup(jPanelJuegoLayout.createSequentialGroup()
                        .addComponent(jLabelImgPokeballs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanelJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private Pokedex pokedex;
    
    private void bPokedexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPokedexMouseClicked
                
        if (pokedex != null) 
        {
            pokedex.dispose();
        }
        
        pokedex = new Pokedex();            
        pokedex.setVisible(true);
                
    }//GEN-LAST:event_bPokedexMouseClicked

    private void textFieldLetraIntroducidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldLetraIntroducidaActionPerformed
              
        textoIntroducido = textFieldLetraIntroducida.getText();

        //Si no se ha introducido nada en el campo de texto, no se captura la letra.
        //Para evitar errores.
        if ((textoIntroducido != null) && (textoIntroducido.length() > 0))
        {
            /*Obtener la primera letra del textField 
            (Será la que se use en el juego para averiguar el nombre del pokémon)*/
            capturarLetra(false);
        }
        
    }//GEN-LAST:event_textFieldLetraIntroducidaActionPerformed

    public void capturarLetra(Boolean YaSeCualEs)
    {
        //Se van revelando las letras en el nombre oculto si se aciertan
        pokemonOculto = AAP.revelarPokemon(textoIntroducido, YaSeCualEs);
        labelNombreOculto.setText(pokemonOculto);
        
        //Se actualiza el número de pokeballs
        imgNumPokeballs = new ImageIcon(new ImageIcon("src"+File.separator+"Images"+File.separator+ AAP.getPokeballs() + ".png").getImage());
        jLabelImgPokeballs.setIcon(imgNumPokeballs);
        
        aniadirLetrasAlLabel();
        
        //Se deja en blanco "textFieldLetraIntroducida" para limpiar la letra cada vez 
        //que se introduzca una.        
        textFieldLetraIntroducida.setText(""); 
        
        FinalizarPartida();
    }
    
    private void aniadirLetrasAlLabel()
    {
        String aux = "";
        
        //JOptionPane.showMessageDialog(null, String.valueOf(AAP.getLetrasIntroducidas()));
        
        for(int i = 0; i < AAP.getLetrasIntroducidas().size(); i++)
        {
            aux = aux + Character.toUpperCase(AAP.getLetrasIntroducidas().get(i)) + " ";
        }
        
        lblLetrasYaIntroducidas.setText(aux);        
    }
    
    private void bNuevoPokemonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bNuevoPokemonMouseClicked
        atraparNuevoPokemon();
    }//GEN-LAST:event_bNuevoPokemonMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        try
        {
            guardarPartida();
        }
        
        catch(IOException ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButtonGuionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuionActionPerformed
        
        textoIntroducido = "-";

        capturarLetra(false);
    }//GEN-LAST:event_jButtonGuionActionPerformed

    private void jButtonDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDosActionPerformed
        
        textoIntroducido = "2";

        capturarLetra(false);
    }//GEN-LAST:event_jButtonDosActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        
        Object[] options = {"!Qué sí, pesao!",
                    "Me lo he pensado mejor"};
        int n = JOptionPane.showOptionDialog(jPanelJuego,
            "¿Estás seguro? Si reseteas el juego, todo tu progreso se perderá.",
            "Confirmar reseteo",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[0]); //default button title
                
         if(n == YES_OPTION)
         {
             File fichero = new File(nombreFichero);       
             resetPartida(fichero);
         }
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSeCualEsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeCualEsActionPerformed
        
        seCualEs();
        
    }//GEN-LAST:event_jButtonSeCualEsActionPerformed

    public void seCualEs()
    {
        Object[] possibilities = null;
        String s = (String)JOptionPane.showInputDialog(
                            this,
                            "\nNombre completo del pokémon:\n\n\n",
                            "A ver si es verdad...",
                            JOptionPane.PLAIN_MESSAGE,
                            null,
                            possibilities,
                           null);

        //If a string was returned, say so.
        if ((s != null) && (s.length() > 0)) 
        {
            textoIntroducido = s;      
            
            capturarLetra(true);
            
            return;
        }

        //If you're here, the return value was null/empty.
        JOptionPane.showMessageDialog(null, "No mereces llamarte entrenador pokémon.");
        
        //Hacer focus sobre el textField
        textFieldLetraIntroducida.requestFocus();
    }        
    
    private void jButtonGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGuardarMouseClicked

        try
        {
            guardarPartida();
        }

        catch(IOException ex)
        {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jButtonGuardarMouseClicked

    private void bNuevoPokemonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bNuevoPokemonKeyReleased
        
        if(evt.getKeyCode()==KeyEvent.VK_A)
        {
            atraparNuevoPokemon();     
        }        
        
    }//GEN-LAST:event_bNuevoPokemonKeyReleased

    private void jPanelJuegoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelJuegoKeyReleased
        
        if(evt.getKeyCode()==KeyEvent.VK_A)
        {
            atraparNuevoPokemon();     
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_S)
        {
            seCualEs();    
        }
    }//GEN-LAST:event_jPanelJuegoKeyReleased

    private void jPanelJuegoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelJuegoMouseClicked
        jPanelJuego.setFocusable(true);        
        jPanelJuego.requestFocus();
    }//GEN-LAST:event_jPanelJuegoMouseClicked

    private void jButtonSeCualEsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSeCualEsKeyReleased
        
        if(evt.getKeyCode()==KeyEvent.VK_S)
        {
            seCualEs();    
        }
    }//GEN-LAST:event_jButtonSeCualEsKeyReleased

    /*Método para iniciar una nueva partida*/
    public void atraparNuevoPokemon()
    {
        /*INSTANCIAR CLASE ATRAPAALPOKEMON*/ 
        
        /*General nuevo pokémon aleatorio*/        
        AAP.generarPokemonAleatorio();
        AAP.iniciarNombreOculto();
        
        /*Iniciar variables*/
        AAP.resetPokeballs();
        
        pokemonAAtrapar = AAP.getPokemonAAdivinar();
        
        pokemonOculto = AAP.getNomOculto();
        labelNombreOculto.setText(pokemonOculto); 
        
        AAP.setLetrasIntroducidas(new ArrayList<>());
        lblLetrasYaIntroducidas.setText("");        
        
        imgNumPokeballs = new ImageIcon(new ImageIcon("src"+File.separator+"Images"+File.separator+ AAP.getPokeballs() + ".png").getImage());
        jLabelImgPokeballs.setIcon(imgNumPokeballs);
        
        //Reactivar el textField
        textFieldLetraIntroducida.setEnabled(true);
        
        //Reactivar botón de "Sé cual es"
        jButtonSeCualEs.setEnabled(true);
        
        //Hacer focus sobre el textField
        textFieldLetraIntroducida.requestFocus();
    }
    
    
    
    public void comprobarPartidaGanada()
    {
        if(AAP.pokemonAtrapado())
        {
            ImageIcon imgPoke = new ImageIcon(new ImageIcon("src"+File.separator+"Images"+File.separator+"pokemon"+File.separator+pokemonAAtrapar.getNombrePokemon()+".png").getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
            
            if(AAP.esShiny())
            {
                imgPoke = new ImageIcon(new ImageIcon("src"+File.separator+"Images"+File.separator+"shiny"+File.separator+pokemonAAtrapar.getNombrePokemon()+"Shiny.png").getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
            }            
            
            JOptionPane.showMessageDialog(this, pokemonAAtrapar.getNombrePokemon() + " atrapado!", "CONSEGUIDO!", 0, imgPoke);
            
            AAP.atraparOSubirNivelPokemon();
        }
    }
    
    public void comprobarPartidaPerdida()
    {
        if(AAP.getPokeballs() < 1)
        {
            AAP.mensajePartidaFinalizada(this, "OH NO!", pokemonAAtrapar.getNombrePokemon() + " se ha escapado!");
        }
    }
    
    public void FinalizarPartida()
    {        
        comprobarPartidaPerdida();
        comprobarPartidaGanada();        
        
        if(AAP.partidaFinalizada())
        {            
            textFieldLetraIntroducida.setEnabled(false);
            jButtonSeCualEs.setEnabled(false);
            bNuevoPokemon.requestFocus();
            
            AAP.establecerContadorPokemonVistos();
        }
        
    }
    
    public void guardarPartida() throws IOException
    {
        File fichero = new File(nombreFichero);
        
        if(!fichero.exists()) fichero.createNewFile();
        
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fichero))) {
            
            oos.writeObject(AtrapaAlPokemon.listaPokemon);
            
            oos.close();
        }
        
        catch(IOException ex)
        {
            ex.printStackTrace();
        }
    }
    
    
    public void obtenerPartidaGuardada() throws FileNotFoundException, IOException, ClassNotFoundException{
        File fichero = new File(nombreFichero);
        
        if(fichero.exists())
        {
                ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fichero));

                AtrapaAlPokemon.setListaPokemon((ArrayList<Pokemon>)ois.readObject());
                
                System.out.print("el fichero existe");
        }
        
        else
        {
            System.out.print("el fichero no existe");
        }
    }
    
    //Método para borrar el fichero que contiene el progreso de la partida
    public void resetPartida(File fichero)
    {
        if (!fichero.exists()) 
        {
            System.out.println("El archivo no existe.");
        } 
        
        else 
        {
            fichero.delete();
            System.out.println("El archivo fue eliminado.");          
        
            AAP = new AtrapaAlPokemon();
            atraparNuevoPokemon();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Juego().setVisible(true);                     
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Juego.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bNuevoPokemon;
    private javax.swing.JButton bPokedex;
    private javax.swing.JButton jButtonDos;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonGuion;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSeCualEs;
    private javax.swing.JLabel jLabelAdivinaElNombre;
    private javax.swing.JLabel jLabelCaracteresEspeciales;
    private javax.swing.JLabel jLabelImgPokeballs;
    private javax.swing.JLabel jLabelIntroduceLetra;
    private javax.swing.JPanel jPanelJuego;
    private javax.swing.JLabel labelLetras;
    private javax.swing.JLabel labelNombreOculto;
    private javax.swing.JLabel lblLetrasYaIntroducidas;
    private javax.swing.JTextField textFieldLetraIntroducida;
    // End of variables declaration//GEN-END:variables
}
